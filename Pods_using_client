/**
 * Copyright (C) 2015 Red Hat, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import io.fabric8.kubernetes.api.model.Pod;
import io.fabric8.kubernetes.api.model.apps.Deployment;
import io.fabric8.kubernetes.client.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CreatePod {

    private static final Logger logger = LoggerFactory.getLogger(CreatePod.class);

    public static void main(String[] args) {

        ConfigBuilder builder = new ConfigBuilder();

        Config config = builder.build();
        try (final KubernetesClient client = new DefaultKubernetesClient(config)) {
            String namespace = "default";
            log("namespace", namespace);
            Pod pod = client.pods().inNamespace(namespace)
                    .load(CreatePod.class.getResourceAsStream("create-newpod.yml")).get();
            //System.out.println(pod.getMetadata());
            //System.out.println(pod.toString());
            log("Pod Created");
            client.pods().inNamespace(namespace).updateStatus(pod);

        }
    }
    public static void log(String action, Object obj) {
        logger.info("{} : {}", action, obj);
    }
    public static void log(String action) {
        logger.info(action);
    }
}
